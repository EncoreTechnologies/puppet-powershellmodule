name: build

on:
  push:
    branches: ['*']
  pull_request:
    type: [opened, reopened, edited]

jobs:
  test:
    name: '${{matrix.name}} - puppet (${{matrix.puppet}}) '
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # note: actions/setup-ruby only allows using a major.minor release of ruby
          - ruby: '2.5'
            puppet: "~> 6.0"
            check: "check:symlinks check:git_ignore check:dot_underscore check:test_file rubocop syntax lint metadata_lint"
            name: 'static'
          - ruby: '2.4'
            puppet: "~> 5.0"
            check: "parallel_spec"
            name: 'spec'
          - ruby: '2.5'
            puppet: "~> 6.0"
            check: "parallel_spec"
            name: 'spec'
    env:
      CHECK: '${{ matrix.check }}'
      PUPPET_GEM_VERSION: '${{ matrix.puppet }}'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: '${{ matrix.ruby }}'
      - name: Bundle prep
        run: |
          gem install bundler
          bundle -v
          rm -f Gemfile.lock
          # Update system gems if requested. This is useful to temporarily workaround troubles in the test runner"
          # See https://github.com/puppetlabs/pdk-templates/commit/705154d5c437796b821691b707156e1b056d244f for an example of how this was used"
          # Ignore exit code of SIGPIPE'd yes to not fail with shell's pipefail set"
          [ -z "$RUBYGEMS_VERSION" ] || (yes || true) | gem update --system $RUBYGEMS_VERSION
          gem --version
          bundle -v
      - name: Bundle install
        run: |
          bundle install --without system_tests --path=${BUNDLE_PATH:-vendor/bundle}
      - name: Test
        run: 'bundle exec rake $CHECK'
